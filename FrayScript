using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class FrayScript : MonoBehaviour
{
    //health
    private int maxHealth = 20;
    private int health;

    //attacking
    private int damage = 1;
    public bool inFight = false;
    private bool canAttack = true;

    //movement variables
    public float direction = 1;
    private float speed;
    private float phaseOneSpeed = 6;
    private float phaseTwoSpeed = 8;
    private Vector3 yFlip = new Vector3(0, 180, 0);
    public bool canFlip = true;
    private float dashForce = 20;
    private float jumpForce = 7;

    //variables for timers
    public float timeToFreeze = 1;
    private float flipFreezeTime = 1;
    private float attackRemaining = 0;
    private float timeRemaining = 0;
    private float flipTimeRemaining = 0;

    //player gameobject
    private GameObject player;

    // Start is called before the first frame update
    void Start()
    {
        //set stats and get player
        speed = phaseOneSpeed;
        health = maxHealth;
        transform.eulerAngles = Vector3.zero;

        player = GameObject.FindGameObjectWithTag("Player");
    }

    // Update is called once per frame
    void Update()
    {
        if (health == 10)
        {
            speed = phaseTwoSpeed;
        }

        if(inFight)
        {
            GetComponent<Animator>().speed = 1;
        }
        else
        {
            GetComponent<Animator>().speed = 0;
        }
        //timer for freezing after hitting player
        if (timeRemaining <= 0 && inFight)
        {
            transform.Translate(Vector3.right * speed * Time.deltaTime);
        }
        else
        {
            timeRemaining -= Time.deltaTime;
        }
        

        //timer for flipping around
        if (flipTimeRemaining <= 0)
        {
            canFlip = true;
        }
        else
        {
            flipTimeRemaining -= Time.deltaTime;
        }

        if (attackRemaining <= 0)
        {
            canAttack = true;
            GetComponent<Animator>().Play("Base Layer.Fray Walk Cycle");
        }
        else
        {
            attackRemaining -= Time.deltaTime;
        }

        if (inFight && canAttack)
        {
            //select an attack based on player positions and such
            //set the timer for the attack based on how long it takes to execute
            if(player.transform.position.y > 92 && player.transform.position.y < 93)
            {
                //if the player is on the ground, dash
                Dash();
            }
            else
            {
                //otherwise move between bounds
            }



        }
    }

    private void OnTriggerEnter2D(Collider2D other)
    {
        //if the enemy is colliding with an attack, take damage (not before the fight has started)
        if (other.gameObject.tag == "Attack" && inFight)
        {
            health -= 1;

            player.GetComponent<PlayerController>().PlayHitEnemy();

            GetComponent<Rigidbody2D>().AddForce(transform.up * jumpForce, ForceMode2D.Impulse);


            if (health <= 0)
            {
                //enemy died
                PlayerController playerCont = GameObject.FindGameObjectWithTag("Player").GetComponent<PlayerController>();

                inFight = false;
                playerCont.FrayDied();
            }

        }
    }


    private void OnCollisionEnter2D(Collision2D other)
    {

        //switch directions when something is hit

        if (other.gameObject.tag != "Floor")
        {
            if (canFlip && inFight)
            {

                if (direction == 1)
                {
                    transform.Rotate(yFlip);
                    direction = -1;

                }
                else if (direction == -1)
                {
                    transform.Rotate(yFlip);
                    direction = 1;

                }

                canFlip = false;
                flipTimeRemaining = flipFreezeTime;
            }

        }

        if (other.gameObject.tag == "Player" && inFight)
        {
            other.gameObject.GetComponent<PlayerController>().DamagePlayer(damage);
        }
    }

    //Set variables back to their defaults
    public void ResetStats()
    {
        health = maxHealth;
        speed = phaseOneSpeed;
        transform.eulerAngles = Vector3.zero;
        direction = 1;
    }

    //attacks

    //dash quickly in the direction of the player until the wall is hit
    private void Dash()
    {
        canAttack = false;
        attackRemaining = 2;

        GetComponent<Animator>().Play("Base Layer.Fray Dash");

        if (player.transform.position.x < transform.position.x)
        {
            //dash to the left
            direction = -1;
            transform.eulerAngles = new Vector3(0, 180, 0);
            GetComponent<Rigidbody2D>().AddForce(transform.right * dashForce, ForceMode2D.Impulse);

        }
        else
        {
            //dash to the right
            direction = 1;
            transform.eulerAngles = new Vector3(0, 0, 0);
            GetComponent<Rigidbody2D>().AddForce(transform.right * dashForce, ForceMode2D.Impulse);
        }
    }

}
